h1. !http://railsapps.github.com/images/rails-36x36.jpg(Rails Composer)! Rails Composer

An application template that creates a Rails 3.2 starter app.

See the "Rails Composer project page":http://railsapps.github.com/rails-composer.

It's the Rails generator on steroids.

The Rails Composer application template is built from recipes provided by the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem.

h2. !http://twitter-badges.s3.amazonaws.com/t_logo-a.png(Follow on Twitter)!:http://www.twitter.com/rails_apps Follow on Twitter

Follow the project on Twitter: "@rails_apps":http://twitter.com/rails_apps. Please tweet some praise if you like what you've found.

h2. Creating a Starter App

To build a Rails application, run the command (where @myapp@ is the name of your application):

<pre>
$ rails new myapp -m https://raw.github.com/RailsApps/rails-composer/master/composer.rb
</pre>

You can use the @-T@ flag to skip Test::Unit files or the @-O@ flag to skip Active Record files:

<pre>
$ rails new myapp -m https://raw.github.com/RailsApps/rails-composer/master/composer.rb -T -O
</pre>

Skip Test::Unit if you plan to use RSpec for unit testing. Skip Active Record if you plan to use a NoSQL datastore with an ORM such as Mongoid.

See the "Troubleshooting" section below if you see errors.

h2. Your Options

The Rails Composer application template will ask you for various preferences, some of which will depend on previous choices. 

Here's an example:

<pre>
question  Install an example application?
      1)  I want to build my own application
      2)  rails3-bootstrap-devise-cancan
      3)  rails3-devise-rspec-cucumber
      4)  rails3-mongoid-devise
      5)  rails3-mongoid-omniauth
      6)  rails3-subdomains

question  Web server for development?
      1)  WEBrick (default)
      2)  Thin
      3)  Unicorn
      4)  Puma

question  Web server for production?
      1)  Same as development
      2)  Thin
      3)  Unicorn
      4)  Puma

question  Database used in development?
      1)  SQLite
      2)  PostgreSQL
      3)  MySQL
      4)  MongoDB

question  Template engine?
      1)  ERB
      2)  Haml
      3)  Slim

question  Unit testing?
      1)  Test::Unit
      2)  RSpec

question  Integration testing?
      1)  None
      2)  RSpec with Capybara
      3)  Cucumber with Capybara
      4)  Turnip with Capybara

question  Fixture replacement?
      1)  None
      2)  Factory Girl
      3)  Machinist

question  Front-end framework?
      1)  None
      2)  Twitter Bootstrap
      3)  Zurb Foundation
      4)  Skeleton
      5)  Just normalize CSS for consistent styling

question  Twitter Bootstrap version?
      1)  Twitter Bootstrap (Less)
      2)  Twitter Bootstrap (Sass)

question  Add support for sending email?
      1)  None
      2)  Gmail
      3)  SMTP
      4)  SendGrid
      5)  Mandrill

question  Authentication?
      1)  None
      2)  Devise
      3)  OmniAuth

question  Devise modules?
      1)  Devise with default modules
      2)  Devise with Confirmable module
      3)  Devise with Confirmable and Invitable modules

question  Authorization?
      1)  None
      2)  CanCan with Rolify
      
question  Use a form builder gem?
      1)  None
      2)  SimpleForm
            
question  Install a starter app?
      1)  None
      2)  Home Page
      3)  Home Page, User Accounts
      4)  Home Page, User Accounts, Admin Dashboard

extras  Add 'therubyracer' JavaScript runtime (for Linux users without node.js)? (y/n)
extras  Set a robots.txt file to ban spiders? (y/n) n
extras  Create a project-specific rvm gemset and .rvmrc? (y/n) n
extras  Create a GitHub repository? (y/n)
</pre>

h2. Run the Application

Switch to the application directory to examine and test what you've built.

<pre>
$ cd myapp
</pre>

h4. Quick Test

For a "smoke test" to see if everything runs, display a list of Rake tasks.

<pre>
$ rake -T
</pre>

There's no need to run @bundle exec rake@ instead of @rake@ when you are using rvm (see "rvm and bundler integration":https://rvm.io/integration/bundler/).

h4. Start the Web Server

If you've chosen WEBrick or Thin for your web server, can run the app by entering the command:

@$ rails server@

To see your application in action, open a browser window and navigate to "http://localhost:3000/":http://localhost:3000.

For the Unicorn web server:

@$ unicorn@

See the app at "http://localhost:8080/":http://localhost:8080.

For the Puma web server:

@$ rails server puma@

See the app at "http://localhost:3000/":http://localhost:3000.

h4. Login

If you've created a version of the application that sets up a default user, log in with:

* email: user@example.com
* password: please

You should delete or change any pre-configured logins before you deploy your application.

h2. Testing

Some versions of the starter application will contain a suite of RSpec unit tests or Cucumber scenarios and step definitions.

After installing the application, run @rake -T@ to check that rake tasks for RSpec and Cucumber are available.

Run @rake spec@ to run all RSpec tests.

Run @rake cucumber@ (or more simply, @cucumber@) to run all Cucumber scenarios.

Please send the author a message, create an issue, or submit a pull request if you want to contribute improved RSpec or Cucumber files.

h2. Deployment

For easy deployment, use a “platform as a service” provider such as:

* "Heroku":http://www.heroku.com/
* "CloudFoundry":http://www.cloudfoundry.com/
* "EngineYard":http://www.engineyard.com/
* "OpenShift":https://openshift.redhat.com/app/

For deployment on Heroku, see the article:

* "Rails on Heroku":http://railsapps.github.com/rails-heroku-tutorial.html

h2. Troubleshooting

Problems? Please check both "issues for the Rails Composer tool":https://github.com/RailsApps/rails-composer/issues and the "issues for the rails_apps_composer gem":https://github.com/RailsApps/rails_apps_composer/issues.

You should review the article "Installing Rails":http://railsapps.github.com/installing-rails.html to make sure you've updated all the components that are required to run Rails successfully.

h4. Problems with "Could not be loaded... You have already activated..."

If you get an error like this:

<pre>
Your bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.
    composer  Running 'after bundler' callbacks.
The template [...] could not be loaded.
Error: You have already activated ..., but your Gemfile requires .... 
Using bundle exec may solve this.
</pre>

It's due to conflicting gem versions. Ignore the misleading hint: "using bundle exec" will not solve this. When you use the @rails new@ command, a specific set of gems is available, either in your system environment, or (if you use rvm) in a default rvm gemset. The Rails Composer tool attempts to use the newest available gem versions. Occasionally one of the gems (often a gem required as a dependency for another gem) will have been recently updated (since the time you last ran a @bundle update@ using the default gemset). If that's the case, @rails new@ creates a new application using the default gemset (containing the outdated gem) and then tries to run the Rails Composer application template with the new set of gems (containing an updated gem). The outdated gem has already been activated so the application template cannot be loaded, resulting in the error you see.

Sometimes the problem is resolved by simply running the @rails new@ command again (after you delete the partially built application folder).

To fully resolve the problem, use rvm and create and use a new gemset before you run the @rails new@ command again. Installing Rails into a new gemset before running @rails new@  will populate the gemset with the most current available gems (including any gems required by a gem dependency).

h4. Problems with "Certificate Verify Failed"

Are you getting an error "OpenSSL certificate verify failed" when you try to generate a new Rails app from an application template? See suggestions to resolve the error "Certificate Verify Failed":http://railsapps.github.com/openssl-certificate-verify-failed.html.

h4. Problems with "Segmentation Fault"

If you get a "segfault" when you try @rails new@, try removing and reinstalling rvm.

h2. Application Template Default

The @rails new@ command creates a new Rails application. If you want to use the Rails Composer application template for every Rails application you build, you can set options for the @rails new@ command in a *.railsrc* file in your home directory. Here's how to set up a *.railsrc* file to use the template when you create a new Rails application:

<pre>
# ~/.railsrc
-m https://raw.github.com/RailsApps/rails-composer/master/composer.rb
</pre>

h2. Documentation and Support

The Rails Composer application template is assembled from recipes supplied by the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem. See the rails_apps_composer project to understand how the Rails Composer application works.

h4. Customizing the Template

If you wish to change the template to generate an app with your own customized options, you can copy and edit the template file. However, it is better to use the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem to create a new application template. You'll find newer versions of the recipes that make up the application template. You may find issues have been identified and (perhaps) fixed. And it will be easier to maintain your application template if you work from the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem.

h4. Writing Recipes

To understand the code in these templates, take a look at "Thor::Actions":http://rdoc.info/github/wycats/thor/master/Thor/Actions. Your recipes can use any methods provided by "Thor::Actions":http://rdoc.info/github/wycats/thor/master/Thor/Actions or "Rails::Generators::Actions":http://railsapi.com/doc/rails-v3.0.3/classes/Rails/Generators/Actions.html. A big thanks to Yehuda Katz for "creating Thor":http://yehudakatz.com/2008/05/12/by-thors-hammer/.

h4. About Rails Application Templates

"Cooking Up A Custom Rails 3 Template (11 Oct 2010) by Andrea Singh":http://blog.madebydna.com/all/code/2010/10/11/cooking-up-a-custom-rails3-template.html
"Rails Application Templates (16 Sept 2010) by Collin Schaafsma":http://quickleft.com/blog/rails-application-templates
"Application templates in Rails 3 (18 Sept 2009) by Ben Scofield":http://benscofield.com/2009/09/application-templates-in-rails-3/
"Railscasts: App Templates in Rails 2.3 (9 Feb 2009) by Ryan Bates":http://railscasts.com/episodes/148-app-templates-in-rails-2-3
"Rails templates (4 Dec 2008) by Pratik Naik":http://m.onkey.org/rails-templates

h4. Similar Projects

There are many similar projects:

* "Rails application template projects":http://railsapps.github.com/rails-application-templates.html
* "Rails examples, tutorials, and starter apps":http://railsapps.github.com/rails-examples-tutorials.html.

h4. Issues

Problems? Please check both "issues for the Rails Composer tool":https://github.com/RailsApps/rails-composer/issues and the "issues for the rails_apps_composer gem":https://github.com/RailsApps/rails_apps_composer/issues.

h4. Where to Get Help

Your best source for help with problems is "Stack Overflow":http://stackoverflow.com/questions/tagged/ruby-on-rails-3. Your issue may have been encountered and addressed by others.

You can also try "Rails Hotline":http://www.railshotline.com/, a free telephone hotline for Rails help staffed by volunteers.

h2. Contributing

Please make changes to the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem rather than changing the Rails Composer application template.

h2. Credits

Daniel Kehoe initiated the "RailsApps project":https://github.com/RailsApps and created the Rails Composer application template.

Is it useful to you? Follow the project on Twitter:
"@rails_apps":http://twitter.com/rails_apps
and tweet some praise. I'd love to know you were helped out by what I've put together.

h2. License

"MIT License":http://www.opensource.org/licenses/mit-license

Copyright 2012 Daniel Kehoe

!https://cruel-carlota.pagodabox.com/9a7ed11e8570e461c585a7afd3722d71(githalytics.com alpha)!
